a) En una estación de trenes, asisten P personas que deben realizar una carga de su tarjeta SUBE en la terminal
disponible. La terminal es utilizada en forma exclusiva por cada persona de acuerdo con el orden de llegada.
Implemente una solución utilizando sólo procesos Persona. Nota: la función UsarTerminal() le permite cargar
la SUBE en la terminal disponible.

bool libre = true;
sem mutex = 1;
sem espera[P] = ([P] 0);
Queue fila;

Process persona[ID:1..P]{
    int idP;

    P(mutex);
    if (libre){
        libre = false;
        V(mutex);
    } else {
        fila.push(ID);
        V(mutex);
        P(espera[ID]);
    }
    UsarTerminal();

    P(mutex);
    if(not empty(fila)){
        fila.pop(idP);
        V(espera[idP]);
    } else {
        libre = true;
    }
    V(mutex);
}

b) Resuelva el mismo problema anterior pero ahora considerando que hay T terminales disponibles. Las personas
realizan una única fila y la carga la realizan en la primera terminal que se libera. Recuerde que sólo debe emplear
procesos Persona. Nota: la función UsarTerminal(t) le permite cargar la SUBE en la terminal t.

int libres == T;
sem term = 1;
sem mutex = 1;
sem espera[P] = ([P] 0);
Queue terminales;
Queue fila;

Process persona[ID:1..P]{
    int idP;
    int t;

    P(mutex);
    if(libres==0){
        fila.push(ID);
        V(mutex);
        P(espera[ID]);
    } else {
        libres--;
        V(mutex);
    }

    P(term);
    terminales.pop(t);
    V(term);

    UsarTerminal(t);

    P(term);
    terminales.push(t);
    V(term);

    P(mutex);
    if(not empty(fila)){
        fila.pop(idP);
        V(espera[idP]);
    } else {
        libres++;
    }
    V(mutex);
}

2. Resolver con MONITORES el siguiente problema: En una elección estudiantil, se utiliza una máquina para voto
electrónico. Existen N Personas que votan y una Autoridad de Mesa que les da acceso a la máquina de acuerdo con el
orden de llegada, aunque ancianos y embarazadas tienen prioridad sobre el resto. La máquina de voto sólo puede ser
usada por una persona a la vez. Nota: la función Votar() permite usar la máquina.

Process persona[ID:1..N]{
    admin.llegue(ID,prio);
    Votar();
    admin.termine();
}

Process autoridad{
    while(true){
        admin.siguiente();
    }
}

Monitor admin{
    int idP;
    Queue fila;
    cond espera;
    cond sig;
    cond fin;

    Procedure llegue(ID: IN int; prio: IN Text){
        fila.push(ID,prio);
        signal(sig);
        wait(espera[idP]);
    }

    Procedure termino(){
        signal(fin);
    }

    Procedure siguiente(){
        if(empty(fila)){
            wait(sig);
        }
        fila.pop(idP, prio);
        signal(espera[idP]);
        wait(fin);
    }
}