1. Un sistema debe validar un conjunto de 10000 transacciones que se encuentran disponibles en una estructura de datos.
Para ello, el sistema dispone de 7 workers, los cuales trabajan colaborativamente validando de a 1 transacción por vez cada uno.
Cada validación puede tomar un tiempo diferente y para realizarla los workers disponen de la función Validar(t), la cual retorna
como resultado un número entero entre 0 al 9. Al finalizar el procesamiento, el último worker en terminar debe informar la cantidad
de transacciones por cada resultado de la función de validación. Nota: maximizar la concurrencia.


Queue transacciones;  //10.000 transacciones
sem mutex = 1;
sem validaciones[10] = ([10] 1); //Inicializo en 1
sem terminados = 1;
sem esperando = 0;
int resul;
int vect[10] = ([10] 0);
int termine = 0;
transaccion t;


Process worker[ID:1..7]{

    P(mutex);                               //Seccion crit
    While (not empty(transacciones)){       //Mientras no se terminen las transacciones
        t = transacciones.pop();            //Saco una transaccion
        V(mutex);                           //Libero la SC
        resul = Validar(t);                 //Valido la transaccion
        P(validaciones[resul]);             //Seccion crit de la validacion
        vect[resul]++;                      //Aumento el contador de la validacion
        V(validaciones[resul]);             //Libero la SC
        P(mutex);                           //Vuelvo a la SC
    }
    V(mutex);                               //Libero la SC

    P(terminados);
    termine++;
    if(termine == 7){
        for(int i=0; i<10; i++){
            print(vect[i]);
        }
        for(int i=0; i<7; i++){
            V(esperando);
        }
        V(terminados);
    } else {
        V(terminados);
        P(esperando);
    }
    
}