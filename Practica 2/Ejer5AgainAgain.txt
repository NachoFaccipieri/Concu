5. Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor encargado
de reponer las botellas de la máquina. Cuando los C corredores han llegado al inicio comienza
la carrera. Cuando un corredor termina la carrera se dirigen a la máquina expendedora, espera
su turno (respetando el orden de llegada), saca una botella y se retira. Si encuentra la máquina
sin botellas, le avisa al repositor para que cargue nuevamente la máquina con 20 botellas; espera
a que se haga la recarga; saca una botella y se retira. Nota: maximizar la concurrencia; mientras
se reponen las botellas se debe permitir que otros corredores se encolen.


sem mutex = 1;
int cant;
Queue fila;

Process Corredor[ID:1..C]{
    P(mutex);
    cant++;
    if(cant == C){
        for (i:=1 to C){
            V(barrera);
        }
        V(mutex);
        P(barrera);
    }

    --correr

    P(mutex);
    if(libre){
        libre = false
        V(mutex);
    } else {
        fila.push(ID);
        V(mutex);
        P(espera[ID]);
    }
    
    if(cantBotellas == 0){
        V(reponer);
        P(botellas);
    }
    cantBotellas--;

    P(mutex);
    If(empty(fila)){
        Libre=true;
    } else {
        fila.pop(idP);
        V(espera[idP]);
    }
    V(mutex);

}

Process repositor{
    while(true){
        P(reponer);
        cantBotellas = 20;
        V(botellas);
    }

}

