4. Simular la atención en un locutorio con 10 cabinas telefónicas, que tiene un empleado que se encarga de atender a los clientes.
Hay N clientes que al llegar esperan hasta que el empleado les indica a que cabina ir, la usan y luego se dirigen al empleado para
pagarle. El empleado atiende a los clientes en el orden en que hacen los pedidos, pero siempre dando prioridad a los que terminaron
de usar la cabina. Nota: maximizar la concurrencia; suponga que hay una función Cobrar() llamada por el empleado que simula que el
empleado le cobra al cliente.

chan llegada(int);
chan PCobrar(int);
chan fin[1..C];
chan libres(int);

Process cliente[ID:1..N]{
    int idC;
    send llegada(ID);
    receive cabina[ID](idC);
    //usar cabina
    send PCobrar(ID);
    receive fin[ID];
}

Process empleado(){
    int idP, i, idCab;

    while(true){

        if(empty(libres)){
            receive PCobrar(idP);
            cobrar();
            send fin[idP]();
        }

        if (not empty(llegada)){
            if(not empty(libres)){
                receive libres(idCab);
                receive llegada(idP);
                send cabina[idP](idCab);
            }
        }
    }
}

Process cabina[ID:1..10]{
    while (true){
        receive sigCliente[ID];
        send libres(ID);
    }
}