1) En una empresa de software hay N personas que prueban un nuevo producto para encontrar errores, cuando encuentran uno generan
un reporte para que un empleado corrija el error (las personas no deben reciben ninguna respuesta). El empleado toma los reportes
de acuerdo al orden de llegada, los evalúan y hace las correcciones necesarias.

chan Reportes(Texto);

Process Persona[ID:1..N]{
    Texto rep;
    While(true){
        rep = generarReporte;
        send Reportes(rep);
    }
}

Process Empleado{
    Texto rep;
    While(true){
        receive Reportes(rep);
        Resolver(rep);
    }
}


2) En una empresa de software hay N personas que prueban un nuevo producto para encontrar errores, cuando encuentran uno generan
un reporte para que un empleado corrija el error y esperan la respuesta del mismo. El empleado toma los reportes de acuerdo al
orden de llegada, los evalúan y hace las correcciones necesarias y le responde a la persona que hizo el reporte.

chan Reportes(Texto, int);
chan Espera[id](Texto);

Process Persona[ID:1..N]{
    Texto rep;
    while (true){
        rep = generarReporte;
        Send Reportes(rep, ID);
        receive Espera[ID](Texto);
    }
}

Process empleado{
    Texto rep;
    int idP;
    while(true){
        Receive(rep,idP);
        Resolver(rep);
        send[idP](rep);
    }
}


3) En una empresa de software hay N personas que prueban un nuevo producto para encontrar errores, cuando encuentran uno generan
un reporte para que uno de los 3 empleados corrija el error y esperan la respuesta del mismo. El empleado toma los reportes de 
acuerdo al orden de llegada, los evalúan, hacen las correcciones necesarias y le responde a la persona que hizo el reporte.

chan Reportes(Text,int);
chan Espera[N](Text);

Process persona[ID:1..N]{
    Text rep;
    While(true){
        Rep = generarReporte;
        Send Reportes(Text, ID);
        Receive Espera[ID](Text);
    }
}

Process empleados[ID:1..3]{
    Text rep;
    While(true){
        receive Reportes(rep, idP);
        Resolver(rep);
        send Espera[idP](rep);
    }
}


4) En una empresa de software hay N personas que prueban un nuevo producto para encontrar errores, cuando encuentran uno generan
un reporte para que un empleado corrija el error y esperan la respuesta del mismo. El empleado toma los reportes de 
acuerdo al orden de llegada, los evalúan, hacen las correcciones necesarias. Cuando no hay reportes para atender el empleado se
dedica a leer durante 10 minutos.

chan Reportes(Texto);

Process Persona[ID:1..N]{
    Text rep;
    while(true){
        rep = generarReporte;
        send Reportes(rep);
    }
}

Process empleado{
    Text rep;
    While(true){
        if (not empty(Reportes)){
            receive reportes(rep);
            Resolver(rep);
        } else {
            //leer
        }
    }
}


5)  En una empresa de software hay N personas que prueban un nuevo producto para encontrar errores, cuando encuentran uno generan
un reporte para que uno de los 3 empleados corrija el error y esperan la respuesta del mismo. Los empleados toman los reportes de 
acuerdo al orden de llegada, los evalúan, hacen las correcciones necesarias. Cuando no hay reportes para atender el empleado se
dedica a leer durante 10 minutos.


chan reportes(Text);
chan libre(ID);
chan sig[3](Text);

Process empleado[ID:1..3]{
    Text rep;
    while(true){
        send libre[ID]
        receive sig[ID](rep);
        if (rep != "Vacio"){
            Resolver(Rep);
        } else {
            //leer
        }
    }
}

Process admin{
    int idE;
    while(true){
        receive libre(idE);
        if (empty(reportes)){
            Rep = "Vacio";
        } else {
            receive reportes(Rep);
        }
        send sig[idE](Rep);
    }
}